/*
    module  : tut.in2
    version : 1.4
    date    : 04/20/20
*/

/* RECURSIVE FUNCTIONS, non-recursive computation */

/* "last" is a tail-recursive function */
(Smith Jones Robinson) last .
/* now let us look at the (recursive) definition of "last" */
(last) definition .
(Smith Jones Robinson) (last) definition i .
/* using the x-combinator */
(Smith Jones Robinson)
(swap dup rest null (car swap pop) (cdr swap x) branch) x .
/* using the y-combinator */
(Smith Jones Robinson)
(swap dup rest null (car swap pop) (cdr swap i) branch) y .

/* "factorial" is not tail-recursive */
6 factorial_rec .
/* using the x-combinator */
6 (swap dup 2 smaller (pop pop 1) (dup pred rolldown x mul) branch) x .
/* using the y-combinator */
6 (swap dup 2 smaller (pop pop 1) (dup pred rolldown i mul) branch) y .

/* "QUICKSORT" */

(1 9 2 8 3 7 4 6 5) quicksort .
(5 6 4 7 3 8 2 9 1) quicksort .
(1 2 3 4 5 6 7 8 9) quicksort .
(9 8 7 6 5 4 3 2 1) quicksort .

/* now look at the definition of quicksort: */
(quicksort) definition .
