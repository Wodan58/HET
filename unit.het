#
#   module  : unit.het
#   version : 1.5
#   date    : 07/03/24
#

# push and execute word
aap ! .

# push and execute list
(aap noot mies) ! . ; ;

# push and execute special
(;) / ! .

# definition and dereference
(a : a *) dup : ;
aap dup * ! . .

# add to empty list
aap + .

# add to list
(aap) noot + .

# divide a singleton list
(aap) / . .

# divide a list
(aap noot) / . .

# convert a word to a list
noot < .

# collect garbage
gc $ .

# compare two words
aap aap = .

# compare two lists
() = .

# compare two specials, collect garbage
(a % ; b % ; a * b *) swap : ;
(;) / (;) / swap * ! ; = . ;

# convert a list to a word
(n o o t) > .

# get the type of a word
aap ? .

# get the type of a list
(aap) ? .

# get the type of a special
(;) / ? . ;

# compare word and list
aap = .
aap () = .

# compare special and word
(;) / semi = . ;

# compare word and special
semi (;) / swap * ! ; = .

# compare list and word
empty = .

# compare word and list
empty () = .

# lists cannot be compared with =
(1 2 3) (1 2 3) = .

# test less
10 9 less $ .
